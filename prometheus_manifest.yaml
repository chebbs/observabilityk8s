apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"prometheus-server","io.portainer.kubernetes.application.kind":"content","io.portainer.kubernetes.application.name":"prometheus","io.portainer.kubernetes.application.owner":"varun","io.portainer.kubernetes.application.owner.id":"3","io.portainer.kubernetes.application.stack":"prometheus","io.portainer.kubernetes.application.stackid":"117"},"name":"prometheus-deployment","namespace":"monitoring"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"prometheus-server"}},"template":{"metadata":{"labels":{"app":"prometheus-server"}},"spec":{"containers":[{"args":["--storage.tsdb.retention.time=12h","--config.file=/etc/prometheus/prometheus.yml","--storage.tsdb.path=/prometheus/"],"image":"prom/prometheus","name":"prometheus","ports":[{"containerPort":9090}],"resources":{"limits":{"cpu":1,"memory":"1Gi"},"requests":{"cpu":"500m","memory":"500M"}},"volumeMounts":[{"mountPath":"/etc/prometheus/","name":"prometheus-config-volume"},{"mountPath":"/prometheus/","name":"prometheus-storage-volume"}]}],"volumes":[{"configMap":{"defaultMode":420,"name":"prometheus-server-conf"},"name":"prometheus-config-volume"},{"emptyDir":{},"name":"prometheus-storage-volume"}]}}}}
  creationTimestamp: 2024-09-13T06:10:34Z
  generation: 1
  labels:
    app: prometheus-server
    io.portainer.kubernetes.application.kind: content
    io.portainer.kubernetes.application.name: prometheus
    io.portainer.kubernetes.application.owner: varun
    io.portainer.kubernetes.application.owner.id: "3"
    io.portainer.kubernetes.application.stack: prometheus
    io.portainer.kubernetes.application.stackid: "117"
  name: prometheus-deployment
  namespace: monitoring
  uid: 3dab4060-6192-4019-b8c2-f899039044ce
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus-server
    spec:
      containers:
        - args:
            - --storage.tsdb.retention.time=12h
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus/
          image: prom/prometheus
          imagePullPolicy: Always
          name: prometheus
          ports:
            - containerPort: 9090
              protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 500M
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/prometheus/
              name: prometheus-config-volume
            - mountPath: /prometheus/
              name: prometheus-storage-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server-conf
          name: prometheus-config-volume
        - emptyDir: {}
          name: prometheus-storage-volume
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: 2024-09-13T06:10:37Z
      lastUpdateTime: 2024-09-13T06:10:37Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2024-09-13T06:10:34Z
      lastUpdateTime: 2024-09-13T06:10:37Z
      message: ReplicaSet "prometheus-deployment-5dc88c6b94" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"prometheus.io/port":"9090","prometheus.io/scrape":"true"},"labels":{"io.portainer.kubernetes.application.kind":"content","io.portainer.kubernetes.application.name":"prometheus","io.portainer.kubernetes.application.owner":"varun","io.portainer.kubernetes.application.owner.id":"3","io.portainer.kubernetes.application.stack":"prometheus","io.portainer.kubernetes.application.stackid":"117"},"name":"prometheus-service","namespace":"monitoring"},"spec":{"ports":[{"nodePort":30000,"port":8080,"targetPort":9090}],"selector":{"app":"prometheus-server"},"type":"NodePort"}}
    prometheus.io/port: "9090"
    prometheus.io/scrape: "true"
  creationTimestamp: 2024-09-13T06:10:34Z
  labels:
    io.portainer.kubernetes.application.kind: content
    io.portainer.kubernetes.application.name: prometheus
    io.portainer.kubernetes.application.owner: varun
    io.portainer.kubernetes.application.owner.id: "3"
    io.portainer.kubernetes.application.stack: prometheus
    io.portainer.kubernetes.application.stackid: "117"
  name: prometheus-service
  namespace: monitoring
  uid: da55b5b1-50ee-4b0a-a625-1a17eb3f128b
spec:
  clusterIP: 10.152.183.193
  clusterIPs:
    - 10.152.183.193
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - nodePort: 30000
      port: 8080
      protocol: TCP
      targetPort: 9090
  selector:
    app: prometheus-server
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
